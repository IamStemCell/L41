# В файлі notes1.forms.py
from django import forms

class NoteForm(forms.Form):
    title = forms.CharField(label='Title', max_length=100)
    text = forms.CharField(label='Yext', widget=forms.Textarea)
    reminder = forms.DateTimeField(label='Reminder', required=False, widget=forms.DateTimeInput(attrs={'type': 'datetime-local'}))
    category = forms.CharField(label='Category', max_length=50, required=False)



файл views.py
from django.shortcuts import render, get_object_or_404, redirect
from .models import Note
from .forms import NoteForm

def create_note(request):
    if request.method == 'POST':
        form = NoteForm(request.POST)
        if form.is_valid():
            # Отримання даних з форми
            title = form.cleaned_data['title']
            text = form.cleaned_data['text']
            reminder = form.cleaned_data['reminder']
            category = form.cleaned_data['category']
            
            # Збереження нотатки або виконання інших дій
            
            
            # Перенаправлення на сторінку з деталями нотатки 
            return redirect('note_detail', note_id=note.id)
    else:
        form = NoteForm()
    
    return render(request, 'notes1/create_note.html', {'form': form})


def note_detail(request, note_id):
    note = get_object_or_404(Note, id=note_id)
    
    if request.method == 'POST':
        form = NoteForm(request.POST, instance=note)
        if form.is_valid():
            # Отримання даних з форми
            title = form.cleaned_data['title']
            text = form.cleaned_data['text']
            reminder = form.cleaned_data['reminder']
            category = form.cleaned_data['category']
            
            # Оновлення деталей нотатки
            note.title = title
            note.text = text
            note.reminder = reminder
            note.category = category
            note.save()
            
            # Перенаправлення на сторінку з оновленими деталями нотатки або іншу потрібну сторінку
            return redirect('note_detail', note_id=note.id)
    else:
        form = NoteForm(instance=note)
    
    return render(request, 'notes1/note_detail.html', {'note': note, 'form': form})




def delete_note(request, note_id):
    note = get_object_or_404(Note, id=note_id)
    
    if request.method == 'POST':
        # Delete the note
        note.delete()
        
        # Redirect to a success page or any other desired page
        return redirect('notes_list')
    
    return render(request, 'notes1/delete_note.html', {'note': note})
